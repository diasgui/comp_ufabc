Gramática LL(1) ANALISADOR SINTATICO TOP:
https://sourceforge.net/projects/jsmachines/?source=typ_redirect
Tokens:
PALAVRA_RESERVADA:
    PR_WHILE, PR_IF, PR_ELSE, PR_RETURN, PR_INT, PR_BOOL, PR_DOUBLE, PR_VOid;

INTEIRO:
    INT

PONTO_FLUTUANTE:
    FLOAT;

STRING:
    STRING;

T_BOOL:
    B_TRUE, B_FALSE;
    
idENTIFICADOR:
    id;
    
PONTO_VIRGULA:
    P_VIRGULA;
    
ABRE_PARENTESES:
    A_PAR;
    
FECHA_PARENTESES;
    F_PAR;

ABRE_CHAVES:
    A_CHAVES;

FECHA_CHAVES:
    F_CHAVES;

VIRGULA:
    VIR;

ATRIBUICAO:
    ATTR;

OPERADOR:
    OP_BOOL, OP_NUM; 
    
OPERADOR_RELACIONAL:
    OPR_NUM, OP_id;

INCREMENT:
    IN_id;   

Gramática:

T_FUNC      -> void id(PARAM) { PROGRAM } 
T_FUNC      -> T_NUM id(PARAM) { PROGRAM } 
T_FUNC      -> PR_BOOL id(PARAM) { PROGRAM } 
T_FUNC      -> '' 
PROGRAM     -> INSTRUCAO 
PROGRAM     -> '';
INSTRUCAO   -> SENTENCA 
INSTRUCAO   -> INSTRUCAO2;
INSTRUCAO2  -> INSTRUCAO 
INSTRUCAO2  -> '';
SENTENCA    -> INSTRUCAO
SENTENCA    -> if (COND) { INSTRUCAO } 
SENTENCA    -> if (COND) { INSTRUCAO } T_ELSE 
SENTENCA    -> while (COND) { INSTRUCAO }
COND        -> id 
COND        -> INT 
COND        -> id OP_REL id 
COND        -> id OP_REL INT 
COND        -> INT OP_REL id 
COND        -> INT OP_REL INT 
COND        -> BOOL 
COND        -> id OP_BOOL id COND2
COND2       -> OP_BOOL COND 
COND2       -> ''
SENTENCA    -> T_NUM id; 
SENTENCA    -> T_NUM id OP_IGUAL INT; 
SENTENCA    -> T_NUM id OP_IGUAL FLOAT; 
SENTENCA    -> boolean id; 
SENTENCA    -> boolean id OP_IGUAL T_BOOL;
T_NUM       -> int 
T_NUM       -> double
T_BOOL      -> true 
T_BOOL      -> false
T_ELSE      -> else { INSTRUCAO }
SENTENCA    -> return COND; 
SENTENCA    -> return EXP_MATH; 
SENTENCA    -> return INCREMENT;
PARAM       -> T_NUM id PARAM2 
PARAM       -> PR_BOOL id PARAM2
PARAM2      -> , PARAM 
PARAM2      -> ''
SENTENCA    -> INCREMENT;
INCREMENT   -> IN_id id; 
INCREMENT   -> id IN_id;
